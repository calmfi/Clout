@inject Clout.UI.Services.ToastService ToastSvc

<div class="fixed right-4 bottom-4 z-[9999] flex flex-col gap-2">
    @foreach (var m in _messages)
    {
        var cls = m.Level switch
        {
            Services.ToastLevel.Success => "bg-emerald-600",
            Services.ToastLevel.Warning => "bg-amber-600",
            Services.ToastLevel.Error => "bg-red-600",
            _ => "bg-blue-600"
        };
        <div class="min-w-[240px] max-w-[420px] text-white rounded-md shadow-lg px-3 py-2" style="@($"background-color:transparent;")">
            <div class="flex items-center justify-between gap-3">
                <div class="@cls px-2 py-1 rounded w-full">@m.Text</div>
                <button class="text-white/90 hover:text-white text-sm" @onclick="() => Close(m.Id)">âœ•</button>
            </div>
        </div>
    }
    
</div>

@code {
    private IReadOnlyList<Services.ToastMessage> _messages = Array.Empty<Services.ToastMessage>();

    protected override void OnInitialized()
    {
        ToastSvc.OnChange += HandleChanged;
        _messages = ToastSvc.Messages;
    }

    private void HandleChanged()
    {
        _messages = ToastSvc.Messages;
        InvokeAsync(StateHasChanged);
    }

    private void Close(string id) => ToastSvc.Dismiss(id);
}
